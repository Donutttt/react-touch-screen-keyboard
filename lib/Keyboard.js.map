{"version":3,"sources":["../src/Keyboard.js"],"names":["Keyboard","props","handleLetterButtonClick","bind","handleBackspaceClick","handleLanguageClick","clearInput","handleShiftClick","handleSymbolsClick","state","currentLanguage","defaultKeyboard","showSymbols","uppercase","isUppercase","setState","secondaryKeyboard","inputNode","value","onClick","setTimeout","focus","dispatchEvent","Event","key","selectionStart","selectionEnd","nextValue","substring","setSelectionRange","isFirstLetterUppercase","type","dataset","length","nextSelectionPosition","keysSet","map","keyRow","toUpperCase","symbolsKeyValue","rightButtons","keys","getKeys","console","log","numbers","getSymbolsKeyValue","button","hideKeyboard","propTypes","any","isRequired","func","bool","string","defaultProps"],"mappings":"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","file":"Keyboard.js","sourcesContent":["import React, {PureComponent, PropTypes} from 'react';\nimport KeyboardButton from './KeyboardButton';\n\nimport LatinLayout from './layouts/LatinLayout';\nimport CyrillicLayout from './layouts/CyrillicLayout';\nimport SymbolsLayout from './layouts/SymbolsLayout';\nimport GermanLayout from './layouts/GermanLayout';\n\nimport BackspaceIcon from './icons/BackspaceIcon';\nimport LanguageIcon from './icons/LanguageIcon';\nimport ShiftIcon from './icons/ShiftIcon';\n\nexport default class Keyboard extends PureComponent {\n\tstatic propTypes = {\n\t\tinputNode: PropTypes.any.isRequired,\n\t\tonClick: PropTypes.func,\n\t\tisFirstLetterUppercase: PropTypes.bool,\n\t\tdefaultKeyboard: PropTypes.string,\n\t\tsecondaryKeyboard: PropTypes.string,\n\t\thideKeyboard: PropTypes.func,\n\t};\n\n\tstatic defaultProps = {\n\t\trightButtons: [],\n\t\tisFirstLetterUppercase: false,\n\t\tdefaultKeyboard: 'us',\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handleLetterButtonClick = this.handleLetterButtonClick.bind(this);\n\t\tthis.handleBackspaceClick = this.handleBackspaceClick.bind(this);\n\t\tthis.handleLanguageClick = this.handleLanguageClick.bind(this);\n\t\tthis.clearInput = this.clearInput.bind(this);\n\t\tthis.handleShiftClick = this.handleShiftClick.bind(this);\n\t\tthis.handleSymbolsClick = this.handleSymbolsClick.bind(this);\n\n\t\tthis.state = {\n\t\t\tcurrentLanguage: props.defaultKeyboard,\n\t\t\tshowSymbols: false,\n\t\t\tuppercase: this.isUppercase(),\n\t\t};\n\t}\n\n\thandleLanguageClick() {\n\t\tthis.setState({currentLanguage: this.state.currentLanguage === this.props.defaultKeyboard ? this.props.secondaryKeyboard : this.props.defaultKeyboard });\n\t}\n\n\tclearInput() {\n\t\tconst {inputNode} = this.props;\n\n\t\tinputNode.value = '';\n\t\tif (this.props.onClick) {\n\t\t\tthis.props.onClick('');\n\t\t}\n\n\t\tsetTimeout(() => {\n\t\t\tinputNode.focus();\n\t\t}, 0);\n\t\tinputNode.dispatchEvent(new Event('input'));\n\t}\n\n\thandleShiftClick() {\n\t\tthis.setState({uppercase: !this.state.uppercase});\n\t}\n\n\thandleSymbolsClick() {\n\t\tthis.setState({showSymbols: !this.state.showSymbols});\n\t}\n\n\thandleLetterButtonClick(key) {\n\t\tconst {inputNode} = this.props;\n\t\tconst {value, selectionStart, selectionEnd} = inputNode;\n\t\tconst nextValue = value.substring(0, selectionStart) + key + value.substring(selectionEnd);\n\n\t\tinputNode.value = nextValue;\n\t\tif (this.props.onClick) {\n\t\t\tthis.props.onClick(nextValue);\n\t\t}\n\t\tsetTimeout(() => {\n\t\t\tinputNode.focus();\n\t\t\tinputNode.setSelectionRange(selectionStart + 1, selectionStart + 1);\n\t\t}, 0);\n\t\tthis.setState({uppercase: this.isUppercase()});\n\t\tinputNode.dispatchEvent(new Event('input'));\n\t}\n\n\tisUppercase() {\n\t\tconst {inputNode, isFirstLetterUppercase} = this.props;\n\t\treturn inputNode.type !== 'password' &&\n\t\t\tinputNode.dataset.type !== 'email' &&\n\t\t\t!inputNode.value.length && isFirstLetterUppercase;\n\t}\n\n\thandleBackspaceClick() {\n\t\tconst {inputNode} = this.props;\n\t\tconst {value, selectionStart, selectionEnd} = inputNode;\n\t\tlet nextValue;\n\t\tlet nextSelectionPosition;\n\t\tif (selectionStart === selectionEnd) {\n\t\t\tnextValue = value.substring(0, selectionStart - 1) + value.substring(selectionEnd);\n\t\t\tnextSelectionPosition = selectionStart - 1;\n\t\t} else {\n\t\t\tnextValue = value.substring(0, selectionStart) + value.substring(selectionEnd);\n\t\t\tnextSelectionPosition = selectionStart;\n\t\t}\n\t\tnextSelectionPosition = (nextSelectionPosition > 0) ? nextSelectionPosition : 0;\n\n\t\tinputNode.value = nextValue;\n\t\tif (this.props.onClick) {\n\t\t\tthis.props.onClick(nextValue);\n\t\t}\n\t\tsetTimeout(() => {\n\t\t\tinputNode.focus();\n\t\t\tinputNode.setSelectionRange(nextSelectionPosition, nextSelectionPosition);\n\t\t}, 0);\n\t\tthis.setState({uppercase: this.isUppercase()});\n\t\tinputNode.dispatchEvent(new Event('input'));\n\t}\n\n\tgetKeys() {\n\t\tlet keysSet;\n\t\tif (this.state.showSymbols) {\n\t\t\tkeysSet = SymbolsLayout;\n\t\t} else if (this.state.currentLanguage === 'us') {\n\t\t\tkeysSet = LatinLayout;\n\t\t} else if (this.state.currentLanguage === 'de') {\n\t\t\tkeysSet = GermanLayout;\n\t\t} else if (this.state.currentLanguage === 'ru') {\n\t\t\tkeysSet = CyrillicLayout;\n\t\t} else {\n\t\t\tkeysSet = LatinLayout;\n\t\t}\n\n\t\treturn this.state.uppercase ?\n\t\t\tkeysSet.map(keyRow => keyRow.map(key => key.toUpperCase()))\n\t\t\t: keysSet;\n\t}\n\n\tgetSymbolsKeyValue() {\n\t\tlet symbolsKeyValue;\n\t\tif (!this.state.showSymbols) {\n\t\t\tsymbolsKeyValue = '.?!&';\n\t\t} else if (this.state.currentLanguage === 'us' || this.state.currentLanguage === 'de') {\n\t\t\tsymbolsKeyValue = 'Abc';\n\t\t} else if (this.state.currentLanguage === 'ru') {\n\t\t\tsymbolsKeyValue = 'Абв';\n\t\t} else {\n\t\t\tsymbolsKeyValue = 'Abc';\n\t\t}\n\t\treturn symbolsKeyValue;\n\t}\n\n\trender() {\n\t\tconst {rightButtons, inputNode, secondaryKeyboard} = this.props;\n\t\tconst keys = this.getKeys();\n\t\tconsole.log(keys);\n\t\tconst numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0];\n\t\tconst symbolsKeyValue = this.getSymbolsKeyValue();\n\n\t\treturn (\n\t\t\t<div className=\"keyboard keyboard-wrapper\">\n\t\t\t\t<div className=\"keyboard-row\">\n\t\t\t\t\t{numbers.map((button) =>\n\t\t\t\t\t\t<KeyboardButton\n\t\t\t\t\t\t\tvalue={button}\n\t\t\t\t\t\t\tonClick={this.handleLetterButtonClick}\n\t\t\t\t\t\t\tclasses={\"keyboard-numberButton\"}\n\t\t\t\t\t\t\tkey={button}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<KeyboardButton\n\t\t\t\t\t\tvalue={<BackspaceIcon />}\n\t\t\t\t\t\tonClick={this.handleBackspaceClick}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"keyboard-row\">\n\t\t\t\t\t{keys[0].map((button) =>\n\t\t\t\t\t\t<KeyboardButton\n\t\t\t\t\t\t\tvalue={button}\n\t\t\t\t\t\t\tonClick={this.handleLetterButtonClick}\n\t\t\t\t\t\t\tkey={button}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"keyboard-row\">\n\t\t\t\t\t{keys[1].map((button) =>\n\t\t\t\t\t\t<KeyboardButton\n\t\t\t\t\t\t\tvalue={button}\n\t\t\t\t\t\t\tonClick={this.handleLetterButtonClick}\n\t\t\t\t\t\t\tkey={button}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"keyboard-row\">\n\t\t\t\t\t<KeyboardButton\n\t\t\t\t\t\tclasses=\"shift-symbols\"\n\t\t\t\t\t\tvalue={<ShiftIcon />}\n\t\t\t\t\t\tonClick={this.handleShiftClick}\n\t\t\t\t\t/>\n\t\t\t\t\t{keys[2].map((button) =>\n\t\t\t\t\t\t<KeyboardButton\n\t\t\t\t\t\t\tvalue={button}\n\t\t\t\t\t\t\tonClick={this.handleLetterButtonClick}\n\t\t\t\t\t\t\tkey={button}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<KeyboardButton\n\t\t\t\t\t\tclasses=\"shift-symbols\"\n\t\t\t\t\t\tvalue={symbolsKeyValue}\n\t\t\t\t\t\tonClick={this.handleSymbolsClick}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"keyboard-row\">\n\t\t\t\t\t{typeof secondaryKeyboard !== 'undefined' ?\n\t\t\t\t\t\t<KeyboardButton\n\t\t\t\t\t\t\tvalue={<LanguageIcon />}\n\t\t\t\t\t\t\tonClick={this.handleLanguageClick}\n\t\t\t\t\t\t/>\n\t\t\t\t\t: null}\n\t\t\t\t\t{inputNode.dataset.type === 'email' ?\n\t\t\t\t\t\t<KeyboardButton\n\t\t\t\t\t\t\tvalue={'@'}\n\t\t\t\t\t\t\tonClick={this.handleLetterButtonClick}\n\t\t\t\t\t\t/>\n\t\t\t\t\t: null}\n\t\t\t\t\t<KeyboardButton\n\t\t\t\t\t\tvalue={' '}\n\t\t\t\t\t\tclasses=\"keyboard-space\"\n\t\t\t\t\t\tonClick={this.handleLetterButtonClick}\n\t\t\t\t\t/>\n\t\t\t\t\t{inputNode.dataset.type === 'email' ?\n\t\t\t\t\t\t<KeyboardButton\n\t\t\t\t\t\t\tvalue={'.'}\n\t\t\t\t\t\t\tonClick={this.handleLetterButtonClick}\n\t\t\t\t\t\t/>\n\t\t\t\t\t: null}\n\t\t\t\t\t<KeyboardButton\n\t\t\t\t\t\tvalue={'↧'}\n\t\t\t\t\t\tclasses=\"keyboard-submit-button\"\n\t\t\t\t\t\tonClick={this.props.hideKeyboard}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n"]}